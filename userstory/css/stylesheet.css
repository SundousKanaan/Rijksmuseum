*,
*::after,
*::before {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    caret-color: transparent;
}

:root {
    --background: rgb(255, 215, 182);
    --theme: brown;
    --fontcolor: rgb(248, 248, 248);

    --licht-black: rgba(138, 138, 138, 0.452);

    --button-width: 1.5em;
}


button {
    background: none;
    border: none;
}

body {
    width: 100vw;
    height: 100vh;
    position: relative;
    overflow-x: hidden;

    background-color: var(--background);
}

header {
    width: 100vw;
    height: 100vh;

    position: relative;

    display: grid;
    grid-template-columns: 100%;
    grid-template-rows: 80% 20%;
    gap: 1em;
    justify-items: center;

    /* background-color: var(--theme); */
}

header h1 {
    width: 80%;

    grid-area: 1/1/2/2;
    align-self: end;

    z-index: 2;
}

header>p {
    font-size: 1.5em;
    width: 80%;

    text-align: center;
    color: var(--fontcolor);
    position: absolute;
    bottom: 5.3em;

    z-index: 2;
}

header h1 img {
    display: block;
    width: 100%;

    filter: brightness(100);
}

header>a:first-of-type {
    width: calc(var(--button-width)*1.5);
    height: calc(var(--button-width)*1.5);
    position: absolute;
    top: 1em;
    right: 1.5rem;

    background-color: var(--licht-black);
    box-shadow: 0 0 1em var(--licht-black);

    border-radius: 3em;

    display: grid;

    z-index: 2;
    transition: 1s;
}

header>a:last-of-type {
    width: calc(var(--button-width)*2);
    height: calc(var(--button-width)*2);
    border-radius: 5em;

    position: absolute;
    bottom: 3rem;
    top: auto;
    left: calc(50% - var(--button-width)/2);

    z-index: 3;

    cursor: pointer;

    display: grid;

    animation: flow 1s linear infinite both;
}

header>a:hover {
    transform: rotateY(360deg) scale(1.3);

}

@keyframes flow {
    0% {
        box-shadow: 0 0 1em var(--licht-black), inset 0 0 1em var(--licht-black);
        transform: translateY(-.1em);
    }

    50% {
        transform: translateY(.1em);
    }

    100% {
        box-shadow: 0 0 1em var(var(--licht-black)), inset 0 0 1em var(--licht-black);
        transform: translateY(-.1em);
    }
}


header>a svg {
    width: 80%;

    justify-self: center;
    align-self: center;
}

header ul {
    list-style: none;
    /* position: relative; */
    /* top: 0; */
    /* bottom: 0; */
    height: 100%;
    overflow: hidden;

    grid-area: 1/1/3/-1;
}

header ul::before {
    content: "";
    display: block;
    width: 100%;
    height: 30%;

    /* background-color: blue; */
    background: linear-gradient(0deg, rgba(0, 0, 1, 0.9) 40%, transparent 100%);
    position: absolute;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1;

    /* border-radius: 50% 50% 0 0; */
}

header ul::-webkit-scrollbar {
    display: none;
}

header ul li {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    animation: slider 8s infinite linear;
}

header ul li:nth-of-type(1) {
    animation-delay: -2s;
}

header ul li:nth-of-type(2) {
    animation-delay: -4s;
}

header ul li:nth-of-type(3) {
    animation-delay: -6s;
}

header ul li:nth-of-type(4) {
    animation-delay: -8s;
}

header ul li:nth-of-type(5) {
    animation-delay: -10s;
}

header ul li img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
}

@keyframes slider {

    0%,
    12.5% {
        transform: translateX(100%);
    }

    25% {
        transform: translateX(0%);
    }

    37.5% {
        transform: translateX(0%);
    }

    50% {
        transform: translateX(-100%);
    }

    100% {
        transform: translateX(-100%);
    }
}





main {
    width: 100vw;
    height: 100vh;

    background-color: var(--subcolor);
}